{"mappings":"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","sources":["src/controlador_auto.js","src/devolver_funciones.js","src/movimiento_auto.js","src/avance_auto.js","src/presenter.js"],"sourcesContent":["function validarCadena(cadena) {\n\n  let arregloDeCoincidencia = devolverArregloDeCoincidencias(cadena);\n  if(arregloDeCoincidencia) return true;\n  else return false;\n}\n\nfunction controladorDeAuto(cadena) {\n\n  let salida;\n  if (cadena) {\n    let esValidoLaCadena = validarCadena(cadena);\n    if(esValidoLaCadena) {\n      let dimension = devolverDimension(cadena);\n      let posicion = devolverPosicionInicial(cadena);\n      let orientacion = devolverOrientacion(cadena);\n      let instruccion = devolverInstrucciones(cadena)\n      let posicionFinal = ejecutarComandos(posicion, orientacion, instruccion)\n\n      if(posicionFinal[0] >= [0,0] && posicionFinal[0] <= dimension){\n        salida = ['Posicion inicial: ' + posicion, 'Comandos: ' + instruccion, 'Posicion final: ' + posicionFinal[0] + ' ' + posicionFinal[1]];\n      }else salida = 'El auto se encuentra fuera del rango';\n    }else salida = 'Error entrada.';\n  }\n  else salida = 'Ingrese una cadena.';\n  return salida;\n}\n\nimport { devolverDimension, devolverArregloDeCoincidencias, devolverPosicionInicial,\n        devolverOrientacion, devolverInstrucciones } from './devolver_funciones.js';\nimport { ejecutarComandos } from './movimiento_auto.js';\nexport { controladorDeAuto, validarCadena };\n","const formato = /^(\\d*)(\\,)(\\d*)(\\/)(\\d*)(\\,)(\\d*)([a-zA-Z])(\\/)([a-zA-z]\\D*)$/\n\nfunction devolverDimension(cadena) {\n\n  let arregloDeCoincidencia = devolverArregloDeCoincidencias(cadena);\n    let x = parseInt(arregloDeCoincidencia[1]);\n    let y = parseInt(arregloDeCoincidencia[3]);\n    return [x, y];\n}\n  \nfunction devolverArregloDeCoincidencias(cadena) {\n\n  return cadena.match(formato)\n}\n  \nfunction devolverPosicionInicial(cadena) {\n\n  let arregloDeCoincidencia = devolverArregloDeCoincidencias(cadena);\n  let x = parseInt(arregloDeCoincidencia[5]);\n  let y = parseInt(arregloDeCoincidencia[7]);\n  return [x,y];\n}\n  \nfunction devolverOrientacion(cadena) {\n\n  let arregloDeCoincidencia = devolverArregloDeCoincidencias(cadena, formato);\n  let orientacion = arregloDeCoincidencia[8];\n  return orientacion;\n}\n  \nfunction devolverInstrucciones(cadena) {\n\n  let arregloDeCoincidencia = devolverArregloDeCoincidencias(cadena, formato);\n  let orientacion = arregloDeCoincidencia[10];\n  return orientacion;\n}\n\nexport { devolverDimension, devolverArregloDeCoincidencias, devolverPosicionInicial,\n        devolverOrientacion, devolverInstrucciones };\n        ","function ejecutarComandos(posicion, orientacion, instrucciones) {\n\n  for (var i = 0; i < instrucciones.length; i++) {\n    if(instrucciones[i] == 'i' || instrucciones[i] == 'I') orientacion = izquierda(orientacion);\n    else if(instrucciones[i] == 'd' || instrucciones[i] == 'D') orientacion = derecha(orientacion);\n    else if(instrucciones[i] == 'a'  || instrucciones[i] == 'A') posicion = avanzar(orientacion, posicion);\n    else if(instrucciones[i] == 's'  || instrucciones[i] == 'S') posicion = saltar(orientacion, posicion);\n  }\n  return [posicion, orientacion];\n}\n\nfunction saltar(orientacion, posicion) {\n\n  if(orientacion == 'n' || orientacion == 'N') {\n    posicion[1] = posicion[1] + 2;\n  }\n  else if(orientacion == 'o' || orientacion == 'O') {\n    posicion[0] = posicion[0] - 2;\n  }\n  else if(orientacion == 's' || orientacion == 'S') {\n    posicion[1] = posicion[1] - 2;\n  }\n  else if(orientacion == 'e' || orientacion == 'E') {\n    posicion[0] = posicion[0] + 2;\n  }\n  return posicion;\n}\n\nexport { ejecutarComandos, saltar };\nimport { izquierda, derecha, avanzar } from './avance_auto.js';\n","function izquierda(orientacion) {\n\n    if(orientacion == 'n' || orientacion == 'N'){\n      orientacion = 'O';\n    }\n    else if(orientacion == 'o' || orientacion == 'O') {\n      orientacion = 'S';\n    }\n    else if(orientacion == 's' || orientacion == 'S') {\n      orientacion = 'E';\n    }\n    else if(orientacion == 'e' || orientacion == 'E') {\n      orientacion = 'N';\n    }\n    return orientacion;\n  }\n  \n  function derecha(orientacion) {\n\n    if(orientacion == 'n' || orientacion == 'N') {\n      orientacion = 'E';\n    }\n    else if(orientacion == 'o' || orientacion == 'O') {\n      orientacion = 'N';\n    }\n    else if(orientacion == 's' || orientacion == 'S') {\n      orientacion = 'O';\n    }\n    else if(orientacion == 'e' || orientacion == 'E') {\n      orientacion = 'S';\n    }\n    return orientacion;\n  }\n  \n  function avanzar(orientacion, posicion) {\n\n    if(orientacion == 'n' || orientacion == 'N') {\n      posicion[1] = posicion[1] + 1;\n    }\n    else if(orientacion == 'o' || orientacion == 'O') {\n      posicion[0] = posicion[0] - 1;\n    }\n    else if(orientacion == 's' || orientacion == 'S') {\n      posicion[1] = posicion[1] - 1;\n    }\n    else if(orientacion == 'e' || orientacion == 'E') {\n      posicion[0] = posicion[0] + 1;\n    }\n    return posicion;\n  }\n\nexport { izquierda, derecha, avanzar };\n","import {controladorDeAuto} from \"./controlador_auto.js\";\n\nconst comandos = document.querySelector(\"#comandos\");\nconst form = document.querySelector(\"#controlador-form\");\nconst div = document.querySelector(\"#resultado-div\");\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n\n  const respuesta = controladorDeAuto(comandos.value);\n  div.innerHTML = \"<p>\" + respuesta[0] + \"<br>\" + respuesta[1] + \"<br>\" + respuesta[2] + \"</p>\";\n});\n\n//PRUEBA DE BOT :)"],"names":["cadena","salida","validarCadena","dimension","$b43cb26d407f5a22$exports","devolverDimension","posicion","devolverPosicionInicial","orientacion","devolverOrientacion","instruccion","devolverInstrucciones","posicionFinal","$cae9606ace836b5d$exports","ejecutarComandos","arregloDeCoincidencia","devolverArregloDeCoincidencias","x","parseInt","y","formato","match","instrucciones","i","length","$dff31830a0fb4662$exports","izquierda","derecha","avanzar","saltar","comandos","document","querySelector","form","div","addEventListener","event","preventDefault","respuesta","$8b09a4038321fd28$exports","controladorDeAuto","value","innerHTML"],"version":3,"file":"index.7a61b81d.js.map"}